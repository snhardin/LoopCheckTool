<Project ToolsVersion="15.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <GITHUB_RUN_NUMBER Condition=" '$(GITHUB_RUN_NUMBER)' == '' ">0</GITHUB_RUN_NUMBER>
    <UserDefinedVersion Condition=" '$(UserDefinedVersion)' == '' ">0.0.1</UserDefinedVersion>
  </PropertyGroup>
  <PropertyGroup>
    <!-- Should be major version only per Microsoft guidelines. -->
    <AssemblyVersion>$(UserDefinedVersion).0</AssemblyVersion>
    <AssemblyTitle>$(AssemblyName)</AssemblyTitle>
    <Company>Scott "Dgigs" Hardin</Company>
    <Copyright>Copyright Â©  2020</Copyright>
    <FileVersion>$(UserDefinedVersion).$(GITHUB_RUN_NUMBER)</FileVersion>
    <Product>$(AssemblyName)</Product>
    <RepositoryUrl>https://github.com/snhardin/LoopCheckTool</RepositoryUrl>
    <!-- AssemblyInformationalVersion> is set below. -->
  </PropertyGroup>
  <Target Name="CustomAssemblyMetadata" BeforeTargets="BeforeCompile;CoreCompile" DependsOnTargets="CreateGeneratedAssemblyInfoInputsCacheFile">
    <PropertyGroup>
      <IntermediateOutputPath Condition=" '$(IntermediateOutputPath)' == '' ">$(ProjectDir)obj\$(Configuration)\$(TargetFramework)\</IntermediateOutputPath>
      <BranchFile>$(IntermediateOutputPath)$(MSBuildProjectName).GitBranch</BranchFile>
      <CustomAssemblyInfoFileName>$(MSBuildProjectName).CustomAssemblyMetadata.cs</CustomAssemblyInfoFileName>
      <HashFile>$(IntermediateOutputPath)$(MSBuildProjectName).GitHash</HashFile>
      <TagFile>$(IntermediateOutputPath)$(MSBuildProjectName).GitTag</TagFile>
    </PropertyGroup>
    <Exec Command="git -C $(ProjectDir) rev-parse --short HEAD &gt; $(HashFile)" />
    <ReadLinesFromFile File="$(HashFile)">
      <Output TaskParameter="Lines" ItemName="GitCommit" />
    </ReadLinesFromFile>

    <Exec Command="git -C $(ProjectDir) rev-parse --abbrev-ref HEAD &gt; $(BranchFile)" />
    <ReadLinesFromFile File="$(BranchFile)">
      <Output TaskParameter="Lines" ItemName="GitBranch" />
    </ReadLinesFromFile>

    <Exec Command="git -C $(ProjectDir) describe --tags --abbrev=0 &gt; $(TagFile)" ContinueOnError="true">
      <Output TaskParameter="ExitCode" PropertyName="GitTagExitCode" />
    </Exec>
    <!-- If command is successful, read output from file. -->
    <ReadLinesFromFile File="$(TagFile)" Condition="$(GitTagExitCode) == 0">
      <Output TaskParameter="Lines" PropertyName="AssemblyInformationalVersion" />
    </ReadLinesFromFile>
  
    <ItemGroup>
      <AssemblyAttributes Include="AssemblyMetadata">
        <_Parameter1>GitCommit</_Parameter1>
        <_Parameter2>@(GitCommit)</_Parameter2>
      </AssemblyAttributes>
      <AssemblyAttributes Include="AssemblyMetadata">
        <_Parameter1>GitBranch</_Parameter1>
        <_Parameter2>@(GitBranch)</_Parameter2>
      </AssemblyAttributes>
    </ItemGroup>
    <!-- See https://stackoverflow.com/questions/4300346/using-writecodefragment-msbuild-task -->
    <WriteCodeFragment Language="C#"
                       OutputDirectory="$(IntermediateOutputPath)"
                       OutputFile="$(CustomAssemblyInfoFileName)"
                       AssemblyAttributes="@(AssemblyAttributes)">
      <Output TaskParameter="OutputFile" ItemName="Compile" />
      <Output TaskParameter="OutputFile" ItemName="FileWrites" />
    </WriteCodeFragment>
    <ItemGroup>
      <FileWrites Include="$(TagFile)" />
      <FileWrites Include="$(BranchFile)" />
      <FileWrites Include="$(HashFile)" />
    </ItemGroup>
  </Target>
</Project>
